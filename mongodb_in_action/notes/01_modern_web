-----------------------------------------------------------------------
|  CHAPTER 1 - A DATABASE FOR THE MODERN WEB                          |
-----------------------------------------------------------------------

- Relational DBs

    - Well-normalized data model (data isn't duplicated)
    - Transactions
    - Durable storage engine



- Document DBs

    - Simple data model
    - High read and write throughput
    - Ability to scale easily with automatic failover



- Example of Data Simplicity

    Here is a simple user record:

      {  _id: 10,  
         username: 'peter',  
         email: 'pbbakkum@gmail.com'
      }

    Now, let's say you need multiple email addresses for the user.

      {  _id: 10,  
         username: 'peter',  
         email: [
           'pbbakkum@gmail.com',    
           'pbb7c@virginia.edu'
        ]
      }

    That's it.  No need to worry about fitting into a schema or adding more tables.



- MongoDB

    - Began in mid-2007 as a PaaS project by start-up company 10gen in 2007.


    - Later, the company changed it's name to 'MongoDB' and continues to sponsor the
        database's development as an open source project.  Most the project's core
        developers still work there.


    - MongoDB's data model is document-oriented.  The documents are JSON.


    - A document is essentially a set of property names and their values.

        // A post on a social news website (ie Reddit or Twitter)

        {   
            _id: ObjectID('4bd9e8e17cefd644108961bb'),     // Primary key
            title: 'Adventures in Databases',  
            url: 'http://example.com/databases.txt',  
            author: 'msmith',  
            vote_count: 20,  
            tags: ['databases', 'mongodb', 'indexing'],
            image: {                                       // Attribute pointing to another document
              url: 'http://example.com/db.jpg',
              caption: 'A database.',
              type: 'jpg',
              size: 75381,    
              data: 'Binary'
            },
            comments: [
              {
                user: 'bjones',
                text: 'Interesting article.'
              },
              { 
                user: 'sverch',
                text: 'Color me skeptical!'
              }
            ]
        }


    - Internally, MongoDB stores documents in a format called BSON (Binary JSON).  BSON
        has a similar structure but is used for storing many documents.


    - Instead of tables, MongoDB has 'Collections' of documents.  They are stored on disk.
        Most queries require specifying the collection we want to target.


    - There are usually a lot fewer collections than there would be tables in a relational
        DB, so a lot fewer joins are required.


    - Collections do not enforce any sort of schema.  Your application code enforces the 
        structure of the data, which can speed up initial development when the schema is
        changing frequently.  Also, the items can have a dynamic set of attributes.
